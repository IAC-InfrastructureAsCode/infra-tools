---
- name: Download golang binary
  get_url:
    url: "{{ golang__download_url }}"
    dest: "/tmp/{{ golang__release_archive }}"
    owner: "{{ golang__owner }}"
    group: "{{ golang__group }}"
    mode: 0644

- name: "Creating GOROOT directory"
  file:
    path: "{{ golang__goroot }}"
    owner: "{{ golang__owner }}"
    group: "{{ golang__owner }}"
    mode: "{{ golang__directory_mode }}"
    state: directory

- name: Unarchive golang binary
  unarchive:
    copy: no
    src: "/tmp/{{ golang__release_archive }}"
    dest: "/tmp"

# - name: "Creating GOPATH directory"
#   file:
#     path: "{{ golang__gopath }}"
#     owner: "{{ golang__owner }}"
#     group: "{{ golang__owner }}"
#     mode: "{{ golang__directory_mode }}"
#     state: directory

- name: "Cleanup old golang binary"
  command: "rm -rf {{ golang__goroot }}"

- name: "Moving golang binary to GOPATH"
  command: "mv /tmp/go {{ os_path_binary }}"

- name: "Reset ~/.profile"
  file:
    src: "profile.j2"
    dest: "{{ golang__profile }}"
    owner: "{{ golang__owner }}"
    group: "{{ golang__owner }}"

- name: Setup GOPATH
  command: echo 'export GOPATH={{ golang__gopath }}' >> {{ golang__profile }}

- name: Setup GOROOT
  command: echo 'export GOROOT={{ golang__goroot }}' >> {{ golang__profile }}

- name: Setup PATH (binary)
  command: echo 'export PATH={{ golang__path }}' >> {{ golang__profile }}
