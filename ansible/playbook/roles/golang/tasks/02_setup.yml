---
- name: Download golang binary
  get_url:
    url: "{{ golang_download_url }}"
    dest: "/tmp/{{ golang_release_archive }}"
    owner: "{{ golang_owner }}"
    group: "{{ golang_group }}"
    mode: 0644

- name: "Creating GOROOT directory"
  file:
    path: "{{ golang_goroot }}"
    owner: "{{ golang_owner }}"
    group: "{{ golang_owner }}"
    mode: "{{ golang_directory_mode }}"
    state: directory

- name: Unarchive golang binary
  unarchive:
    copy: no
    src: "/tmp/{{ golang_release_archive }}"
    dest: "/tmp"

# - name: "Creating GOPATH directory"
#   file:
#     path: "{{ golang_gopath }}"
#     owner: "{{ golang_owner }}"
#     group: "{{ golang_owner }}"
#     mode: "{{ golang_directory_mode }}"
#     state: directory

- name: "Cleanup old golang binary"
  command: "rm -rf {{ golang_goroot }}"

- name: "Moving golang binary to GOPATH"
  command: "mv /tmp/go {{ os_path_binary }}"

- name: "Reset ~/.profile"
  file:
    src: "profile.j2"
    dest: "{{ golang_profile }}"
    owner: "{{ golang_owner }}"
    group: "{{ golang_owner }}"

- name: Setup GOPATH
  command: echo 'export GOPATH={{ golang_gopath }}' >> {{ golang_profile }}

- name: Setup GOROOT
  command: echo 'export GOROOT={{ golang_goroot }}' >> {{ golang_profile }}

- name: Setup PATH (binary)
  command: echo 'export PATH={{ golang_path }}' >> {{ golang_profile }}
